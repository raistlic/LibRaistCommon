buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'net.linguica.maven-settings' version '0.5'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'

wrapper {
    gradleVersion = '6.8.3'
}

ext.packaging = 'jar'

description = """Raistlic's Commons Library"""
version = {
    String v = java.util.Optional.ofNullable(System.getenv('CURRENT_VERSION')).orElse('dev')
    println "building with current project version: ${v}"
    return v
}()

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    mavenLocal()
}

apply from: "${rootProject.projectDir}/gradle/coverage.gradle"
apply from: "${rootProject.projectDir}/gradle/upload-archives.gradle"

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.6.2'
    compile group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version:'1.09'
    
    testCompile "org.codehaus.groovy:groovy-all:2.4.1"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version:'1.0.4'
}

// ---------------------------------------------------------------------------------------------------------------------
//  for gradle tasks encoding on Windows machine
// ---------------------------------------------------------------------------------------------------------------------

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
    options.locale = 'en_US'
}

// ---------------------------------------------------------------------------------------------------------------------
//  for maven publish
// ---------------------------------------------------------------------------------------------------------------------

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}
